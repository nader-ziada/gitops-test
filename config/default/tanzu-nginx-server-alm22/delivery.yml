apiVersion: apps/v1
kind: Deployment
metadata:
  name: tanzu-nginx-server-alm22
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
  labels:
    app.kubernetes.io/part-of: tanzu-nginx-server
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: tanzu-nginx-server-alm22
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: run
      app.kubernetes.io/part-of: tanzu-nginx-server
      apps.tanzu.vmware.com/workload-type: server
      carto.run/workload-name: tanzu-nginx-server-alm22
  template:
    metadata:
      annotations:
        conventions.carto.run/applied-conventions: appliveview-sample/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: tanzu-nginx-server
        apps.tanzu.vmware.com/workload-type: server
        carto.run/workload-name: tanzu-nginx-server-alm22
    spec:
      containers:
      - image: index.docker.io/library/nginx@sha256:4c1c50d0ffc614f90b93b07d778028dc765548e823f676fb027f61d281ac380d
        name: workload
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default
---
apiVersion: v1
kind: Service
metadata:
  name: tanzu-nginx-server-alm22
  labels:
    app.kubernetes.io/part-of: tanzu-nginx-server
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: tanzu-nginx-server-alm22
spec:
  selector:
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: tanzu-nginx-server
    apps.tanzu.vmware.com/workload-type: server
    carto.run/workload-name: tanzu-nginx-server-alm22
  ports:
  - targetPort: 8080
    port: 8080
    name: http

